{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceliu/Documents/GitHub/after-school-reg/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match.\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account.\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \" Sign up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"8d+YbQm0U9YadlWixn/C5bsSuyk=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/lawrenceliu/Documents/GitHub/after-school-reg/src/components/Signup.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\nimport {Form, Button, Card,Alert} from 'react-bootstrap'\nimport {useAuth} from \"../contexts/AuthContext\"\nimport {Link, useHistory} from \"react-router-dom\"\n\nexport default function Signup() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const {signup} = useAuth(); \n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e){\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match.\")\n\n        }\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value,passwordRef.current.value)\n            history.push(\"/\")\n        }\n        catch {\n            setError(\"Failed to create an account.\")\n        }\n        setLoading(false)\n\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className = \"text-center mb-4\"> Sign up </h2>\n                    {error && <Alert variant = \"danger\">{error}</Alert>}\n                    <Form onSubmit = {handleSubmit}>\n                        <Form.Group id = \"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type = \"email\" ref={emailRef} required/>\n                        </Form.Group>\n\n                        <Form.Group id = \"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type = \"password\" ref={passwordRef} required/>\n                        </Form.Group>\n\n                        <Form.Group id = \"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type = \"password\" ref={passwordConfirmRef} required></Form.Control>\n                        </Form.Group>\n                        \n                        <Button disabled = {loading} className = \"w-100\" type = \"submit\">Sign up</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className = \"w-100 text-center mt-2\">\n                Already have an account? <Link to = \"/login\">Log in</Link>\n            </div>\n\n\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}